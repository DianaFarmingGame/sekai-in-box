Define(Tree BlockStaticExt
	props {
		need_route 	#f
		routable 	#f
		collision_boxes [rect2(-0.2 -0.5 0.4 0.5)]
		asserts {
			main "assert/树.png"
		}
		draw_data {
			common_tree [&static &main clip3x3_build(0 0)]
		}
	})

; common tree
define(Tree
	ref 2406
	props {
		cur_draw &common_tree
		groupsprop/pushs([2406])
	}
)

; ramdom tree
define(Tree
	ref 2422
	props {
		cur_draw &
		random_rules [
			[1 { cover { cur_draw &common_tree }}]
			[50 { cover { need_destroy #t }}]
		]
		groupsprop/pushs([2406])
	}
)

; 灌木
define(BlockStaticExt
	ref 2407
	props {
		need_route 		#f
		routable 		#f
		need_collision 	#f
		collisible		#f
		asserts {
			main "assert/树.png"
		}
		cur_draw &
		draw_data {
			common [&static &main clip_build(0 3)]
			real [&static &main clip_build(1 3)]	; with flower
		}

		random_rules [
			[10 { cover { cur_draw &common }}]
			[1 { cover { cur_draw &real }}]
			[500 { cover { need_destroy #t }}]
		]

		atile_size vec3(3 3 3)
		atile_matches [[2401] [2101] [2403 2402 2405] [2409 2415 2420]]
		atile_rules [[
			[
				0	0	0
				0	0	0
				0	0	0
				
				0	0	0
				0	4	0
				0	0	0
				
				0	0	0
				0	0	0
				0	0	0
			] { cover { need_destroy #t }}
		] [
			[
				0	0	0
				0	0	0
				0	0	0
				
				0	0	0
				0	0	0
				0	0	0
				
				0	0	0
				0	3	0
				0	0	0
			] { cover { need_destroy #t }}
		] [
			[
				0	0	0
				0	0	0
				0	0	0
				
				0	0	0
				0	0	0
				0	0	0
				
				1	1	1
				1	1	1
				1	1	1
			] {}
		][
			[
				0	0	0
				0	0	0
				0	0	0
				
				0	0	0
				0	0	0
				0	0	0
				
				0	0	0
				0	0	0
				0	0	0
			] { cover { need_destroy #t }}
		]]
	}
)
