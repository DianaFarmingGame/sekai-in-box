(define BlockStaticExt
	ref 103
	props {
		need_route #f
		routable #f
		need_collision #f
		collisible #f
		size (vec3 .5 .5 1)
		asserts {
			main "assert/植物装饰.png"
		}
		cur_draw &
		draw_data {
			grass1 [&static &main (clip16_cover 1 0)]
			grass2 [&static &main (clip16_cover 2 0)]
			grass3 [&static &main (clip16_cover 1 1)]
			grass4 [&static &main (clip16_cover 2 1)]
			grass5 [&static &main (clip16_cover 1 2)]
			grass6 [&static &main (clip16_cover 1 3)]
			blossom1 [&static &main (clip16_cover 3 0)]
			blossom2 [&static &main (clip16_cover 3 1)]
			blossom3 [&static &main (clip16_cover 2 2)]
			blossom4 [&static &main (clip16_cover 3 2)]
			blossom5 [&static &main (clip16_cover 4 2)]
			blossom6 [&static &main (clip16_cover 2 3)]
			blossom7 [&static &main (clip16_cover 3 3)]
			blossom8 [&static &main (clip16_cover 4 3)]
			flower1 [&static &main (clip16_cover 4 0)]
			flower2 [&static &main (clip16_cover 5 0)]
			flower3 [&static &main (clip16_cover 6 0)]
			flower4 [&static &main (clip16_cover 5 1)]
			flower5 [&static &main (clip16_cover 6 1)]
			flower6 [&static &main (clip16_cover 7 1)]
			flower7 [&static &main (clip16_cover 5 2)]
			flower8 [&static &main (clip16_cover 6 2)]
			bush1 [&static &main (clip16_cover 5 3)]
			bush2 [&static &main (clip16_cover 6 3)]
			bush3 [&static &main (clip16_cover 7 3)]
			bush4 [&static &main (clip16_cover 8 3)]
			rock1 [&static &main (clip16_cover 0 4)]
			rock2 [&static &main (clip16_cover 1 4)]
			rock3 [&static &main (clip16_cover 2 4)]
			rock4 [&static &main (clip16_cover 3 4)]
			rock5 [&static &main (clip16_cover 4 4)]
			rock6 [&static &main (clip16_cover 1 4)]
			rock7 [&static &main (clip16_cover 2 5)]
			rock8 [&static &main (clip16_cover 3 5)]
			rock9 [&static &main (clip16_cover 4 5)]
		}
		random_rules [
			[1 { cover { cur_draw &grass1 }}]
			[1 { cover { cur_draw &grass2 }}]
			[1 { cover { cur_draw &grass3 }}]
			[1 { cover { cur_draw &grass4 }}]
			[1 { cover { cur_draw &grass5 }}]
			[1 { cover { cur_draw &grass6 }}]
			[1 { cover { cur_draw &blossom1 }}]
			[1 { cover { cur_draw &blossom2 }}]
			[1 { cover { cur_draw &blossom3 }}]
			[1 { cover { cur_draw &blossom4 }}]
			[1 { cover { cur_draw &blossom5 }}]
			[1 { cover { cur_draw &blossom6 }}]
			[1 { cover { cur_draw &blossom7 }}]
			[1 { cover { cur_draw &blossom8 }}]
			[1 { cover { cur_draw &flower1 }}]
			[1 { cover { cur_draw &flower2 }}]
			[1 { cover { cur_draw &flower3 }}]
			[1 { cover { cur_draw &flower4 }}]
			[1 { cover { cur_draw &flower5 }}]
			[1 { cover { cur_draw &flower6 }}]
			[1 { cover { cur_draw &flower7 }}]
			[1 { cover { cur_draw &flower8 }}]
			[1 { cover { cur_draw &bush1 }}]
			[1 { cover { cur_draw &bush2 }}]
			[1 { cover { cur_draw &bush3 }}]
			[1 { cover { cur_draw &bush4 }}]
			[1 { cover { cur_draw &rock1 }}]
			[1 { cover { cur_draw &rock2 }}]
			[1 { cover { cur_draw &rock3 }}]
			[1 { cover { cur_draw &rock4 }}]
			[1 { cover { cur_draw &rock5 }}]
			[1 { cover { cur_draw &rock6 }}]
			[1 { cover { cur_draw &rock7 }}]
			[1 { cover { cur_draw &rock8 }}]
			[1 { cover { cur_draw &rock9 }}]
			[30 { cover { need_destroy #t }}]
		]
		atile_size (vec3 3 3 3)
		atile_matches [[102] [100] [105 106 108]]
		atile_rules [[
			[
				0	0	0
				0	0	0
				0	0	0
				
				0	0	0
				0	0	0
				0	0	0
				
				3	3	3
				3	3	3
				3	3	3
			] { cover { need_destroy #t }}
		][
			[
				0	0	0
				0	0	0
				0	0	0
				
				0	0	0
				0	-2	0
				0	0	0
				
				1	1	1
				1	1	1
				1	1	1
			] {}
		][
			[
				0	0	0
				0	0	0
				0	0	0
				
				0	0	0
				0	0	0
				0	0	0
				
				0	0	0
				0	0	0
				0	0	0
			] { cover { need_destroy #t }}
		]]
	})
